"use strict";(self.webpackChunkdocusaurus_classic_typescript=self.webpackChunkdocusaurus_classic_typescript||[]).push([[2804],{8974:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=n(11),r=(n(2735),n(9530));const o={sidebar_position:1,title:"NX \u2013 Packages and Projects"},i="NX: Packages and Projects",s={unversionedId:"contributing/packages-and-projects",id:"contributing/packages-and-projects",title:"NX \u2013 Packages and Projects",description:"WordPress Playground uses a tool called nx to manage the repository.",source:"@site/docs/13-contributing/04-packages-and-projects.md",sourceDirName:"13-contributing",slug:"/contributing/packages-and-projects",permalink:"/wordpress-playground/contributing/packages-and-projects",draft:!1,editUrl:"https://github.com/WordPress/wordpress-playground/tree/trunk/packages/docs/site/docs/13-contributing/04-packages-and-projects.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"NX \u2013 Packages and Projects"},sidebar:"tutorialSidebar",previous:{title:"Coding standards",permalink:"/wordpress-playground/contributing/coding-standards"},next:{title:"Triage Contributions",permalink:"/wordpress-playground/contributing/triage"}},p={},l=[{value:"Getting started with nx",id:"getting-started-with-nx",level:2},{value:"Projects",id:"projects",level:2},{value:"Tasks",id:"tasks",level:2},{value:"Add a new project / package",id:"add-a-new-project--package",level:2},{value:"Which tools to choose?",id:"which-tools-to-choose",level:3},{value:"After you create a new project",id:"after-you-create-a-new-project",level:3},{value:"Package.json",id:"packagejson",level:3},{value:"Move a project to a different directory",id:"move-a-project-to-a-different-directory",level:2},{value:"Rename a project",id:"rename-a-project",level:2},{value:"Delete a project",id:"delete-a-project",level:2},{value:"Publish a project on npm",id:"publish-a-project-on-npm",level:2}],c={toc:l},d="wrapper";function u(e){let{components:t,...o}=e;return(0,r.kt)(d,(0,a.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"nx-packages-and-projects"},"NX: Packages and Projects"),(0,r.kt)("p",null,"WordPress Playground uses a tool called ",(0,r.kt)("a",{parentName:"p",href:"https://nx.dev/"},"nx")," to manage the repository."),(0,r.kt)("p",null,"Why?"),(0,r.kt)("p",null,"The dependencies between Playground packages ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/WordPress/wordpress-playground/pull/151"},"are too complex")," to manage with a bundler like webpack. Nx is the right tool for the job. Just look at this dependency graph:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Dependency graph",src:n(1847).Z,width:"11237",height:"2606"})),(0,r.kt)("h2",{id:"getting-started-with-nx"},"Getting started with nx"),(0,r.kt)("p",null,"Start by reviewing the ",(0,r.kt)("a",{parentName:"p",href:"https://nx.dev/getting-started/intro"},"Nx documentation"),". It's a good idea to install the Nx VS Code extension \u2013 it makes many common tasks easier."),(0,r.kt)("h2",{id:"projects"},"Projects"),(0,r.kt)("p",null,'Nx uses the term "project" which is different from an npm "package". A project can be an npm package, a VS Code plugin, a web app that isn\'t published on npm, or even a directory with nothing more than a Dockerfile and a project.json file.'),(0,r.kt)("h2",{id:"tasks"},"Tasks"),(0,r.kt)("p",null,"Every project needs a set of tasks so it can be built, tested, type-checked and so on. Tasks are stored in ",(0,r.kt)("inlineCode",{parentName:"p"},"project.json")," files. Learn more about ",(0,r.kt)("a",{parentName:"p",href:"https://nx.dev/core-features/run-tasks"},"tasks in nx documentation"),"."),(0,r.kt)("h2",{id:"add-a-new-project--package"},"Add a new project / package"),(0,r.kt)("p",null,"Nx uses generators to create new packages. There are generators for Node.js libraries, web apps, angular apps, and more."),(0,r.kt)("p",null,"For example, here's how you can create a new project containing a Node.js app:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"nx g @nrwl/node:application\n")),(0,r.kt)("p",null,"Nx will then ask you many questions about the project. For example, it will ask you to choose a build tool. You can answer them in the terminal, or you can use the VS Code extension to answer them in a GUI \u2013 the latter is much easier."),(0,r.kt)("h3",{id:"which-tools-to-choose"},"Which tools to choose?"),(0,r.kt)("p",null,"In the Playground repository, we use the following tools:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"TypeScript for type-checking"),(0,r.kt)("li",{parentName:"ul"},"Vite or esbuild for building both web apps and node.js apps"),(0,r.kt)("li",{parentName:"ul"},"Vitest for testing")),(0,r.kt)("h3",{id:"after-you-create-a-new-project"},"After you create a new project"),(0,r.kt)("p",null,"Follow this checklist:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Add a new ",(0,r.kt)("inlineCode",{parentName:"li"},"workspaces")," in the top-level ",(0,r.kt)("inlineCode",{parentName:"li"},"package.json")," file if needed. Otherwise TypeScript won't work correctly and Lerna won't pick up your package for publishing."),(0,r.kt)("li",{parentName:"ul"},"Add a ",(0,r.kt)("inlineCode",{parentName:"li"},"typecheck")," task to the ",(0,r.kt)("inlineCode",{parentName:"li"},"project.json")," file in the new project. You can copy it from another project in this repo."),(0,r.kt)("li",{parentName:"ul"},"Run ",(0,r.kt)("inlineCode",{parentName:"li"},"nx typecheck <project name>")," to make sure TypeScript is set up correctly."),(0,r.kt)("li",{parentName:"ul"},"If the project needs to ship both ESM and CJS builds, add a ",(0,r.kt)("inlineCode",{parentName:"li"},"test:esmcjs")," task to the ",(0,r.kt)("inlineCode",{parentName:"li"},"project.json")," and add it to the ",(0,r.kt)("inlineCode",{parentName:"li"},"dependsOn")," list of the ",(0,r.kt)("inlineCode",{parentName:"li"},"test")," task. This way the CI will continuously verify whether your double build works. The alternative is to find out when a disappointed extender files an issue."),(0,r.kt)("li",{parentName:"ul"},"Add the ",(0,r.kt)("inlineCode",{parentName:"li"},"package-json")," task to the build pipeline. See the details below.")),(0,r.kt)("h3",{id:"packagejson"},"Package.json"),(0,r.kt)("p",null,"Do not add any ",(0,r.kt)("inlineCode",{parentName:"p"},"dependencies")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"devDependencies")," into the ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json")," file of the new project. WordPress Playground keeps track of all dependencies in the top-level ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json")," file and computes the one used by each project automatically using a custom NX executor. The process goes like this:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Bundle the project into the ",(0,r.kt)("inlineCode",{parentName:"li"},"dist")," directory, just copy the package.json as is"),(0,r.kt)("li",{parentName:"ol"},"Add correct dependencies using the ",(0,r.kt)("inlineCode",{parentName:"li"},"@wp-playground/nx-extensions:package-json")," executor")),(0,r.kt)("p",null,"Here's how you should configure the chain of build tasks in your ",(0,r.kt)("inlineCode",{parentName:"p"},"project.json"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "build": {\n        "executor": "nx:noop",\n        "dependsOn": ["build:package-json"]\n    },\n    "build:package-json": {\n        "executor": "@wp-playground/nx-extensions:package-json",\n        "options": {\n            "tsConfig": "packages/php-wasm/node/tsconfig.lib.json",\n            "outputPath": "dist/packages/php-wasm/node",\n            "buildTarget": "php-wasm-node:build:bundle:production"\n        },\n        "dependsOn": ["build:bundle"]\n    },\n    "build:bundle": {\n        "//": "... your bundle task ..."\n    }\n}\n')),(0,r.kt)("h2",{id:"move-a-project-to-a-different-directory"},"Move a project to a different directory"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("a",{parentName:"p",href:"https://nx.dev/packages/workspace/generators/move"},"@nx/workspace:move")," generator:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"nx g @nx/workspace:move --projectName=<project name> --destination=<new directory>\n")),(0,r.kt)("p",null,"Or use the VS Code extension \u2013 again, that's much easier than remembering all the commands."),(0,r.kt)("h2",{id:"rename-a-project"},"Rename a project"),(0,r.kt)("p",null,"Same as above."),(0,r.kt)("h2",{id:"delete-a-project"},"Delete a project"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("a",{parentName:"p",href:"https://nx.dev/packages/workspace/generators/remove"},"@nx/workspace:remove")," generator:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"nx g @nx/workspace:remove --projectName=<project name>\n")),(0,r.kt)("h2",{id:"publish-a-project-on-npm"},"Publish a project on npm"),(0,r.kt)("p",null,"See the ",(0,r.kt)("a",{parentName:"p",href:"/wordpress-playground/contributing/publishing"},"publishing")," guide."))}u.isMDXComponent=!0},9530:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(2735);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(n),k=r,h=d["".concat(p,".").concat(k)]||d[k]||u[k]||o;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=k;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},1847:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/dependencies-455eb791a91dfefc77b65d75281b9e78.png"}}]);